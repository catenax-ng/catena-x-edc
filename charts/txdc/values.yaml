# Default values for eclipse-dataspace-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: ""
nameOverride: ""

imagePullSecrets: [ ]

customLabels: { }

controlplane:
  image:
    # when left empty the deployment will select the correct image automatically
    repository: ""
    pullPolicy: IfNotPresent
    # if null chart.AppVersion. Please note that the deployment might not be compatible with lower version
    tag: ""
  initContainers: [ ]
  debug:
    enabled: false
    port: 1044
    suspendOnStart: false
  logLevel: INFO
  internationalDataSpaces:
    id: TXDC
    description: Tractus-X Eclipse IDS Data Space Connector
    title: ""
    maintainer: ""
    curator: ""
    catalogId: TXDC-Catalog
  livenessProbe:
    # -- Whether to enable kubernetes [liveness-probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    enabled: true
    # -- seconds to wait before performing the first liveness check
    initialDelaySeconds: 30
    # -- this fields specifies that kubernetes should perform a liveness check every 10 seconds
    periodSeconds: 10
    # -- number of seconds after which the probe times out
    timeoutSeconds: 5
    # -- when a probe fails kubernetes will try 6 times before giving up
    failureThreshold: 6
    # -- number of consecutive successes for the probe to be considered successful after having failed
    successThreshold: 1
  readinessProbe:
    # -- Whether to enable kubernetes [readiness-probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    enabled: true
    # -- seconds to wait before performing the first readiness check
    initialDelaySeconds: 30
    # -- this fields specifies that kubernetes should perform a readiness check every 10 seconds
    periodSeconds: 10
    # -- number of seconds after which the probe times out
    timeoutSeconds: 5
    # -- when a probe fails kubernetes will try 6 times before giving up
    failureThreshold: 6
    # -- number of consecutive successes for the probe to be considered successful after having failed
    successThreshold: 1
  # -- endpoints of the control plane
  endpoints:
    # -- default api for health checks, should not be added to any ingress
    default:
      # -- port for incoming api calls
      port: 8080
      # -- path for incoming api calls
      path: /api
    # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
    data:
      # -- port for incoming api calls
      port: 8081
      # -- path for incoming api calls
      path: /data
      # -- authentication key, must be attached to each 'X-Api-Key' request header
      authKey: ""
    # -- validation api, only used by the data plane and should not be added to any ingress
    validation:
      # -- port for incoming api calls
      port: 8082
      # -- path for incoming api calls
      path: /validation
    # -- control api, used for internal control calls. can be added to the internal ingress, but should probably not
    control:
      # -- port for incoming api calls
      port: 8083
      # -- path for incoming api calls
      path: /control
    # -- ids api, used for inter connector communication and must be internet facing
    ids:
      # -- port for incoming api calls
      port: 8084
      # -- path for incoming api calls
      path: /api/v1/ids
    # -- metrics api, used for application metrics, must not be internet facing
    metrics:
      # -- port for incoming api calls
      port: 8085
      # -- path for incoming api calls
      path: /metrics
  service:
    # -- [Service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types) to expose the running application on a set of Pods as a network service.
    type: ClusterIP
    annotations: { }
  podLabels: { }
  podAnnotations: { }
  podSecurityContext:
    { }
  # fsGroup: 2000
  securityContext:
    { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  # Extra environment variables that will be pass onto deployment pods
  env: {}
  #  ENV_NAME: value
  
  # "valueFrom" environment variable references that will be added to deployment pods. Name is templated.
  # ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core
  envValueFrom: {}
  #  ENV_NAME:
  #    configMapKeyRef:
  #      name: configmap-name
  #      key: value_key
  #    secretKeyRef:
  #      name: secret-name
  #      key: value_key
  
  # [Kubernetes Secret Resource](https://kubernetes.io/docs/concepts/configuration/secret/) names to load environment variables from
  envSecretNames: []
  #  - first-secret
  #  - second-secret
  
  # [Kubernetes ConfigMap Resource](https://kubernetes.io/docs/concepts/configuration/configmap/) names to load environment variables from
  envConfigMapNames: []
  #  - first-config-map
  #  - second-config-map
 
  ## Ingress declaration to expose the network service.
  ingresses:
    ## Public / Internet facing Ingress
    - enabled: false
      # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
      hostname: "edc-control.local"
      # -- Additional ingress annotations to add
      annotations: { }
      # -- EDC endpoints exposed by this ingress resource
      endpoints:
        - ids
      # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
      className: ""
      # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
      tls:
        # -- Enables TLS on the ingress resource
        enabled: false
        # -- If present overwrites the default secret name
        secretName: ""
      ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
      certManager:
        # -- If preset enables certificate generation via cert-manager namespace scoped issuer
        issuer: ""
        # -- If preset enables certificate generation via cert-manager cluster-wide issuer
        clusterIssuer: ""
    ## Private / Intranet facing Ingress
    - enabled: false
      # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
      hostname: "edc-control.intranet"
      # -- Additional ingress annotations to add
      annotations: { }
      # -- EDC endpoints exposed by this ingress resource
      endpoints:
        - data
        - control
      # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
      className: ""
      # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
      tls:
        # -- Enables TLS on the ingress resource
        enabled: false
        # -- If present overwrites the default secret name
        secretName: ""
      ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
      certManager:
        # -- If preset enables certificate generation via cert-manager namespace scoped issuer
        issuer: ""
        # -- If preset enables certificate generation via cert-manager cluster-wide issuer
        clusterIssuer: ""
  # -- declare where to mount [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) into the container 
  volumeMounts: [ ]
  # -- [volume](https://kubernetes.io/docs/concepts/storage/volumes/) directories
  volumes: [ ]
  #-- [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the container
  resources:
    { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

dataplane:
  image:
    # when left empty the deployment will select the correct image automatically
    repository: ""
    pullPolicy: IfNotPresent
    # if null chart.AppVersion. Please note that the deployment might not be compatible with lower version
    tag: ""
  initContainers: [ ]
  debug:
    enabled: false
    port: 1044
    suspendOnStart: false
  logLevel: INFO
  livenessProbe:
    # -- Whether to enable kubernetes [liveness-probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    enabled: true
    # -- seconds to wait before performing the first liveness check
    initialDelaySeconds: 30
    # -- this fields specifies that kubernetes should perform a liveness check every 10 seconds
    periodSeconds: 10
    # -- number of seconds after which the probe times out
    timeoutSeconds: 5
    # -- when a probe fails kubernetes will try 6 times before giving up
    failureThreshold: 6
    # -- number of consecutive successes for the probe to be considered successful after having failed
    successThreshold: 1
  readinessProbe:
    # -- Whether to enable kubernetes [readiness-probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    enabled: true
    # -- seconds to wait before performing the first readiness check
    initialDelaySeconds: 30
    # -- this fields specifies that kubernetes should perform a liveness check every 10 seconds
    periodSeconds: 10
    # -- number of seconds after which the probe times out
    timeoutSeconds: 5
    # -- when a probe fails kubernetes will try 6 times before giving up
    failureThreshold: 6
    # -- number of consecutive successes for the probe to be considered successful after having failed
    successThreshold: 1
  service:
    # -- [Service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types) to expose the running application on a set of Pods as a network service.
    type: ClusterIP
    port: 80
  endpoints:
    default:
      port: 8080
      path: /api
    public:
      port: 8081
      path: /api/public
    validation:
      port: 8082
      path: /validation
    control:
      port: 8083
      path: /api/dataplane/control
    metrics:
      port: 8084
      path: /metrics
  aws:
    endpointOverride: ""
    accessKeyId: ""
    secretAccessKey: ""
  podLabels: { }
  podAnnotations: { }
  podSecurityContext:
    { }
  # fsGroup: 2000
  securityContext:
    { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  ## Ingress declaration to expose the network service.
  ingresses:
    ## Public / Internet facing Ingress
    - enabled: false
      # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
      hostname: "edc-data.local"
      # -- Additional ingress annotations to add
      annotations: { }
      # -- EDC endpoints exposed by this ingress resource
      endpoints:
        - public
      # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
      className: ""
      # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
      tls:
        # -- Enables TLS on the ingress resource
        enabled: false
        # -- If present overwrites the default secret name
        secretName: ""
      ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
      certManager:
        # -- If preset enables certificate generation via cert-manager namespace scoped issuer
        issuer: ""
        # -- If preset enables certificate generation via cert-manager cluster-wide issuer
        clusterIssuer: ""
  # -- declare where to mount [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) into the container 
  volumeMounts: [ ]
  # -- [volume](https://kubernetes.io/docs/concepts/storage/volumes/) directories
  volumes: [ ]
  #-- [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the container
  resources:
    { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

postgresql:
  enabled: true
  jdbcUrl: ""
  username: ""
  password: ""

vault:
  hashicorp:
    enabled: true
    url: ""
    token: ""
    timeout: 30
    healthCheck:
      enabled: true
      standbyOk: true
    paths:
      secret: /v1/secret
      health: /v1/sys/health
  azure:
    enabled: false
    name: ""
    client: ""
    tenant: ""
    secret: ""
    certificate: ""
  secretNames:
    transferProxyTokenSignerPrivateKey: transfer-proxy-token-signer-private-key
    transferProxyTokenSignerPublicKey: transfer-proxy-token-signer-public-key
    transferProxyTokenEncryptionAesKey: transfer-proxy-token-encryption-aes-key
    dapsPrivateKey: daps-private-key
    dapsPublicKey: daps-public-key

daps:
  url: ""
  clientId: ""
  paths:
    jwks: /jwks.json
    token: /token

backendService:
  httpProxyTokenReceiverUrl: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
