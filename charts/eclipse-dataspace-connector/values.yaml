# Default values for eclipse-dataspace-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []

control:
  host: 
    name: ""
    tls: true
  nameOverride: ""
  fullnameOverride: ""
  image:
    # when left empty the deployment will select the correct image automatically
    repository: ""
    pullPolicy: IfNotPresent
    # if null chart.AppVersion. Please note that the deployment might not be compatible with lower version
    tag: ""
  initContainers: []
  debug:
    enabled: false
    port: 1044
    suspendOnStart: false
  livenessProbe:
    # -- Whether to enable kubernetes [liveness-probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    # -- Whether to enable kubernetes [readiness-probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  endpoints:
    default:
      port: 8080
      path: /api
    data:
      port: 8081
      path: /data
    validation:
      port: 8082
      path: /validation
    control:
      port: 8083
      path: /control
    ids:
      port: 8084
      path: /api/v1/ids
    metrics:
      port: 8085
      path: /metrics
  service:
    type: ClusterIP
    annotations: {}
  podLabels: {}
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  volumeMounts: []
  volumes: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

data:
  nameOverride: ""
  fullnameOverride: ""
  image:
    # when left empty the deployment will select the correct image automatically
    repository: ""
    pullPolicy: IfNotPresent
    # if null chart.AppVersion. Please note that the deployment might not be compatible with lower version
    tag: ""
  initContainers: []
  debug:
    enabled: false
    port: ""
    suspendOnStart: false
  service:
    type: ClusterIP
    port: 80
  endpoints:
    default:
      port: 8080
      path: /api
    public:
      port: 8185
      path: /api/public
    control:
      port: 9999
      path: /api/dataplane/control
    metrics:
      port: 9090
      path: /metrics
  podLabels: {}
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  volumeMounts: []
  volumes: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgresql:
  enabled: false
  host: ""
  port: 5432
  database: "edc"
  auth:
    password: ""
    username: ""
    database: ""

vault:
  hashicorp:
    enabled: false
    host: ""
    tls: true
    token: ""
    timeout: 30
    healthCheck:
      enabled: true
      standbyOk: true
    paths:
      secret: /v1/secret
      health: /v1/sys/health
  azure:
    enabled: false
    name: ""
    client: ""
    tenant: ""
    secret: ""
  secretNames:
    transferProxyTokenSignerPublicKey: "transfer-proxy-token-signer-public-key"
    transferProxyTokenSignerPrivateKey: "transfer-proxy-token-signer-private-key"
    dapsPrivateKey: "daps-private-key"
    dapsPublicKey: "daps-public-key"

daps:
  host: ""
  tls: true
  clientId: ""
  paths:
    jwks: /jwks.json
    token: /token

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
