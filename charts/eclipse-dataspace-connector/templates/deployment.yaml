apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "txdc.control.fullname" . }}
  labels:
    {{- include "txdc.control.labels" . | nindent 4 }}
spec:
  {{- if not .Values.control.autoscaling.enabled }}
  replicas: {{ .Values.control.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "txdc.control.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.control.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "txdc.control.selectorLabels" . | nindent 8 }}
        {{- include .Values.control.podLabels . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "txdc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.control.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.control.securityContext | nindent 12 }}
          {{- if .Values.control.image.repository }}
          image: "{{ .Values.control.image.repository }}:{{ .Values.control.image.tag | default .Chart.AppVersion }}"
          {{- else if .Values.control.postgresql.enabled and .Values.vault.azure.enabled }}
          image: "ghcr.io/catenax-ng/product-edc/edc-controlplane-postgresql-hashicorp-vault:{{ .Values.control.image.tag | default .Chart.AppVersion }}"
          {{- else if .Values.control.postgresql.enabled and .Values.vault.azure.enabled }}
          image: "ghcr.io/catenax-ng/product-edc/edc-controlplane-postgresql-vault:{{ .Values.control.image.tag | default .Chart.AppVersion }}"
          {{- else if .Values.vault.hashicorp.enabled }}
          image: "ghcr.io/catenax-ng/product-edc/edc-controlplane-memory-hashicorp-vault:{{ .Values.control.image.tag | default .Chart.AppVersion }}"
          {{- else if .Values.vault.azure.enabled }}
          image: "ghcr.io/catenax-ng/product-edc/edc-controlplane-memory:{{ .Values.control.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          {{- fail "cannot choose control-plane image automatically based on configuration" }}
          {{- end }}
          imagePullPolicy: {{ .Values.control.image.pullPolicy }}
          ports:
          {{- range .Values.control.endpoints }}
            - name: {{ . }}
              containerPorts: {{ .port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.control.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.control.endpoints.default.path }}/check/liveness
              port: {{ .Values.control.endpoints.default.port }}
            initialDelaySeconds: {{ .Values.control.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.control.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.control.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.control.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.control.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.controlplane.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.control.endpoints.default.path }}/check/readiness
              port: {{ .Values.control.endpoints.default.port }}
            initialDelaySeconds: {{ .Values.control.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.control.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.control.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.control.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.control.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.control.resources | nindent 12 }}
      {{- with .Values.control.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.control.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.control.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      env:
        {{- if .Values.control.debug.enabled and .Values.control.debug.suspendOnStart }}
        JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address="{{ .Values.control.debug.port }}
        {{- else if .Values.control.debug.enabled }}
        JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address="{{ .Values.control.debug.port }}
        {{- end }}

        ########################
        ## DAPS CONFIGURATION ##
        ########################

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/iam/oauth2/oauth2-core
        EDC_OAUTH_CLIENT_ID: {{ .Values.daps.clientId }}
        EDC_OAUTH_PROVIDER_JWKS_URL: {{ printf "https://%s%s" .Values.daps.host .Values.daps.paths.jwks }}
        EDC_OAUTH_TOKEN_URL: {{ printf "https://%s%s" .Values.daps.host .Values.daps.paths.token }}
        EDC_OAUTH_PRIVATE_KEY_ALIAS: {{ .Values.vault.secretNames.dapsPrivateKey }}
        EDC_OAUTH_PUBLIC_KEY_ALIAS: {{ .Values.vault.secretNames.dapsPublicKey }}

        #############
        ## GENERAL ##
        #############
        IDS_WEBHOOK_ADDRESS: {{ include "txdc.control.url.ids") }}
        EDC_IDS_ENDPOINT: {{ include "txdc.control.url.ids" }}
        EDC_IDS_ENDPOINT_AUDIENCE: {{ printf "https://%s%s" (include "control.host") "/api/v1/ids/data" }}
        EDC_IDS_ID: {{ .Values.control.internationalDataSpaces.id }}
        EDC_IDS_DESCRIPTION: {{ .Values.control.internationalDataSpaces.description }}
        EDC_IDS_TITLE: {{ .Values.control.internationalDataSpaces.title }}
        EDC_IDS_MAINTAINER: {{ .Values.control.internationalDataSpaces.maintainer }}
        EDC_IDS_CURATOR: {{ .Values.control.internationalDataSpaces.curator }}
        EDC_IDS_CATALOG_ID: {{ .Values.control.internationalDataSpaces.catalogId }}

        {{- if .Values.postgresql.enabled }}
        ################
        ## POSTGRESQL ##
        ################

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/store/sql/asset-index-sql
        EDC_DATASOURCE_ASSET_NAME: asset
        EDC_DATASOURCE_ASSET_USER: {{ .Values.postgresql.auth.username }}
        EDC_DATASOURCE_ASSET_PASSWORD: {{ .Values.postgresql.auth.password }}
        EDC_DATASOURCE_ASSET_URL: {{ printf "jdbc:postgresql://%s:%s/%s" .Values.postgresql.host .Values.postgresql.port .Values.postgresql.database }}
        
        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/store/sql/contract-definition-store-sql
        EDC_DATASOURCE_CONTRACTDEFINITION_NAME: contractdefinition
        EDC_DATASOURCE_CONTRACTDEFINITION_USER: {{ .Values.postgresql.auth.username }}
        EDC_DATASOURCE_CONTRACTDEFINITION_PASSWORD: {{ .Values.postgresql.auth.password }}
        EDC_DATASOURCE_CONTRACTDEFINITION_URL: {{ printf "jdbc:postgresql://%s:%s/%s" .Values.postgresql.host .Values.postgresql.port .Values.postgresql.database }}

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/store/sql/contract-negotiation-store-sql
        EDC_DATASOURCE_CONTRACTNEGOTIATION_NAME: contractnegotiation
        EDC_DATASOURCE_CONTRACTNEGOTIATION_USER: {{ .Values.postgresql.auth.username }}
        EDC_DATASOURCE_CONTRACTNEGOTIATION_PASSWORD: {{ .Values.postgresql.auth.password }}
        EDC_DATASOURCE_CONTRACTNEGOTIATION_URL: {{ printf "jdbc:postgresql://%s:%s/%s" .Values.postgresql.host .Values.postgresql.port .Values.postgresql.database }}

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/store/sql/policy-store-sql
        EDC_DATASOURCE_POLICY_NAME: policy
        EDC_DATASOURCE_POLICY_USER: {{ .Values.postgresql.auth.username }}
        EDC_DATASOURCE_POLICY_URL: {{ printf "jdbc:postgresql://%s:%s/%s" .Values.postgresql.host .Values.postgresql.port .Values.postgresql.database }}

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/store/sql/transfer-process-store-sql
        EDC_DATASOURCE_TRANSFERPROCESS_NAME: transferprocess
        EDC_DATASOURCE_TRANSFERPROCESS_USER: {{ .Values.postgresql.auth.username }}
        EDC_DATASOURCE_TRANSFERPROCESS_PASSWORD: {{ .Values.postgresql.auth.password }}
        EDC_DATASOURCE_TRANSFERPROCESS_URL: {{ printf "jdbc:postgresql://%s:%s/%s" .Values.postgresql.host .Values.postgresql.port .Values.postgresql.database }}
        {{- end }}

        ################
        ## DATA PLANE ##
        ################

        # see extension https://github.com/catenax-ng/product-edc/tree/develop/edc-extensions/dataplane-selector-configuration
        EDC_DATAPLANE_SELECTOR_SOKRATESPLANE_URL: {{ printf "http://%s%s" (include "data.host.control") .Values.data.endpoints.control.path }}
        EDC_DATAPLANE_SELECTOR_SOKRATESPLANE_SOURCETYPES : HttpData
        EDC_DATAPLANE_SELECTOR_SOKRATESPLANE_DESTINATIONTYPES: HttpProxy
        EDC_DATAPLANE_SELECTOR_SOKRATESPLANE_PROPERTIES: {{ printf "{\"publicApiUrl\": \"https://%s\" }" {{ printf "%s%s" (include "data.host.public") .Values.data.endpoints.public.path }} }}

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/data-plane-transfer
        EDC_TRANSFER_PROXY_ENDPOINT: {{ printf "https://%s%s" (include "data.host.public") .Values.data.endpoints.public.path }}
        EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: {{ .Values.vault.secretNames.transferProxyTokenSignerPrivateKey }}
        EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: {{ .Values.vault.secretNames.transferProxyTokenSignerPublicKey }}

        # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/control-plane/http-receiver
        EDC_RECEIVER_HTTP_ENDPOINT: {{ .Values.backendService.httpProxyTokenReceiverUrl }}

        ###########
        ## VAULT ##
        ###########

        {{- if .Values.vault.hashicorp.enabled }}

        # see extension https://github.com/catenax-ng/product-edc/tree/develop/edc-extensions/hashicorp-vault
        EDC_VAULT_HASHICORP_URL: {{ printf "http://%s" .Values.vault.hashicorp.host }}
        EDC_VAULT_HASHICORP_TOKEN: {{ .Values.vault.hashicorp.token }}
        EDC_VAULT_HASHICORP_TIMEOUT_SECONDS: {{ .Values.vault.hashicorp.timeout }}
        EDC_VAULT_HASHICORP_HEALTH_CHECK_ENABLED: {{ .Values.vault.hashicorp.healthCheck.enabled }}
        EDC_VAULT_HASHICORP_HEALTH_STANDBY_OK: {{ .Values.vault.hashicorp.healthCheck.standbyOk }}
        EDC_VAULT_HASHICORP_API_SECRET_PATH: {{ .Values.vault.hashicorp.paths.secret }}
        EDC_VAULT_HASHICORP_API_HEALTH_CHECK_PATH: {{ .Values.vault.hashicorp.paths.secret }}

        {{- end }}

        {{- if .Values.vault.azure.enabled }}

        EDC_VAULT_CLIENTID: {{ .Values.vault.azure.client }}
        EDC_VAULT_TENANTID: {{ .Values.vault.azure.tenant }}
        EDC_VAULT_NAME: {{ .Values.vault.azure.name }}
        EDC_VAULT_CLIENTSECRET: {{ .Values.vault.azure.secret }}
        EDC_VAULT_CERTIFICATE: {{ .Values.vault.azure.certificate }}

        {{- end }}

        #####################
        ## DATA ENCRYPTION ##
        #####################

        # see extension https://github.com/catenax-ng/product-edc/tree/develop/edc-extensions/data-encryption
        EDC_DATA_ENCRYPTION_KEYS_ALIAS: {{ .Values.vault.secretNames.transferProxyTokenEncryptionAesKey }}
        EDC_DATA_ENCRYPTION_ALGORITHM: AES

